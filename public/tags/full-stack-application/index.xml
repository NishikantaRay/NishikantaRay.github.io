<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Full-Stack Application on Nishikanta Ray</title>
    <link>https://nishikanta.in/tags/full-stack-application/</link>
    <description>Recent content in Full-Stack Application on Nishikanta Ray</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 16 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://nishikanta.in/tags/full-stack-application/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>üñºÔ∏è Understanding Race Conditions in Image Uploads</title>
      <link>https://nishikanta.in/posts/race-conditions-in-image-uploads/</link>
      <pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/race-conditions-in-image-uploads/</guid>
      <description>In the world of concurrent programming, race conditions are subtle bugs that can lead to unpredictable behavior and data corruption.
&amp;ldquo;when two threads access the same location in memory at the same time, and at least one of the accesses is a write.&amp;quot;
üö¶ What is a Race Condition?Link to headingA race condition arises when multiple threads access and attempt to modify shared data concurrently. Since thread scheduling can switch between threads unpredictably, the sequence of access and modification is uncertain.</description>
    </item>
    
    <item>
      <title>Advanced Aggregation Techniques: $unwind, $group, and $project</title>
      <link>https://nishikanta.in/posts/advanced-aggregation-techniques-unwind-group-and-project/</link>
      <pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/advanced-aggregation-techniques-unwind-group-and-project/</guid>
      <description>MongoDB&amp;rsquo;s aggregation framework is a versatile tool for transforming and analyzing data. Combining $unwind with other aggregation stages allow you to perform even more complex queries and gain deeper insights from your data.
Understanding $unwindLink to headingThe $unwind stage in MongoDB&amp;rsquo;s aggregation pipeline deconstructs an array field from the input documents to output a document for each element of the array. This effectively &amp;ldquo;flattens&amp;rdquo; the array, creating multiple documents from a single document that contains an array.</description>
    </item>
    
    <item>
      <title>‚ú® Get Creative with Badge Craft: A User-Friendly Guide to Designing Memorable Event Badges ‚ú®</title>
      <link>https://nishikanta.in/posts/get-creative-with-badge-craft-a-user-friendly-guide-to-designing-memorable-event-badges/</link>
      <pubDate>Tue, 12 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/get-creative-with-badge-craft-a-user-friendly-guide-to-designing-memorable-event-badges/</guid>
      <description>Introducing Badge Craft: Your gateway to personalized event badges! üéâ Say goodbye to generic designs and hello to bespoke creations tailored to your event&amp;rsquo;s theme. With Badge Craft, organizers can upload unique designs, fostering engagement and leaving a lasting impression on attendees. Our platform offers endless customization possibilities, catering to various event types.
Crafting Memorable Events: Your Step-by-Step Guide to Mastering Badge Craft:Link to headingStep-1:Link to headingGet Started with Badge Craft - Create Your Account and Log In Today!</description>
    </item>
    
    <item>
      <title>Creating a Comprehensive Hackathon Database with Outerbase and Supabase üöÄüõ†Ô∏è</title>
      <link>https://nishikanta.in/posts/creating-a-comprehensive-hackathon-database-with-outerbase-and-supabase/</link>
      <pubDate>Tue, 26 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/creating-a-comprehensive-hackathon-database-with-outerbase-and-supabase/</guid>
      <description>Introduction üìùLink to headingIn this tutorial, we will walk you through the process of creating a robust hackathon database using Outerbase and Supabase. This database will allow you to efficiently manage hackathon details, challenges, teams, submissions, judges, and judging criteria. üèÜüîç
Prerequisites üß∞‚úÖLink to headingBefore we begin, make sure you have the following:
An account on Supabase: Sign up here. üåêüîó
A project set up on Supabase with credentials generated.</description>
    </item>
    
    <item>
      <title>Compound Patterns and Custom Hooks in React: A Powerful Combination ‚ú®</title>
      <link>https://nishikanta.in/posts/compound-patterns-and-custom-hooks-in-react-a-powerful-combination/</link>
      <pubDate>Sat, 23 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/compound-patterns-and-custom-hooks-in-react-a-powerful-combination/</guid>
      <description>IntroductionLink to headingReact&amp;rsquo;s functional components, coupled with hooks, have revolutionized the way we manage state and logic in modern web applications. One powerful approaIntroduction üöÄ
React&amp;rsquo;s functional components, coupled with hooks, have revolutionized the way we manage state and logic in modern web applications. One powerful approach is the combination of compound patterns and custom hooks, which allows for cleaner, more modular code. In this blog post, we&amp;rsquo;ll explore this approach and provide practical examples to illustrate its effectiveness.</description>
    </item>
    
    <item>
      <title>Modular UIs with Compound Components in React üß©</title>
      <link>https://nishikanta.in/posts/modular-uis-with-compound-components-in-react/</link>
      <pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/modular-uis-with-compound-components-in-react/</guid>
      <description>Introduction üöÄLink to headingWhen it comes to building user interfaces in React, creating reusable and maintainable components is crucial. One powerful design pattern that can greatly enhance the modularity of your UI is the Compound Component pattern. In this blog post, we&amp;rsquo;ll explore what the Compound Component pattern is and how to effectively implement it in React.
What is the Compound Component Pattern? ü§îLink to headingThe Compound Component pattern is a design approach that involves breaking down a complex UI element into smaller, reusable components.</description>
    </item>
    
    <item>
      <title>Render Props Pattern in React</title>
      <link>https://nishikanta.in/posts/render-props-pattern-in-react/</link>
      <pubDate>Wed, 13 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/render-props-pattern-in-react/</guid>
      <description>Introduction:
When it comes to building flexible and reusable components in React, the Render Props pattern stands out as a powerful tool in a developer&amp;rsquo;s toolkit. In this post, we&amp;rsquo;ll dive into what the Render Props pattern is, why it&amp;rsquo;s useful, and how you can leverage it in your React applications.
What is the Render Props Pattern?
At its core, the Render Props pattern is a technique used in React to share code between components.</description>
    </item>
    
    <item>
      <title>Higher-Order Components (HOCs) in React</title>
      <link>https://nishikanta.in/posts/higher-order-components-hocs-in-react/</link>
      <pubDate>Tue, 05 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/higher-order-components-hocs-in-react/</guid>
      <description>Understanding Higher-Order Components:Link to headingA Higher-Order Component (HOC) is a function that takes a component and returns a new component with enhanced capabilities. In essence, HOCs are a way to share behavior or functionality among React components. They are a crucial part of React&amp;rsquo;s composability and code reusability.
Why Use HOCs?Link to heading1. ReusabilityLink to headingHOCs allow you to encapsulate and share standard functionality across different components.</description>
    </item>
    
    <item>
      <title>Automate Your Node.js Backend Development with the Backdraft Code Generator</title>
      <link>https://nishikanta.in/posts/automate-your-node.js-backend-development-with-the-backdraft-code-generator/</link>
      <pubDate>Tue, 22 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/automate-your-node.js-backend-development-with-the-backdraft-code-generator/</guid>
      <description>As a Node.js developer, you know that getting your backend project off the ground can be both exciting and time-consuming. From setting up the project structure to integrating authentication, these initial steps can take up a significant chunk of your development time. What if I told you that there&amp;rsquo;s a solution that can save you precious hours and streamline your backend development process? Introducing the Backdraft Code Generator ‚Äì a powerful tool designed to make your Node.</description>
    </item>
    
    <item>
      <title>Building a Feature-Rich Full-Stack Application with AWS Amplify Studio: Admin panel for Studytub</title>
      <link>https://nishikanta.in/posts/building-a-feature-rich-full-stack-application-with-aws-amplify-studio-admin-panel-for-studytub/</link>
      <pubDate>Fri, 28 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/building-a-feature-rich-full-stack-application-with-aws-amplify-studio-admin-panel-for-studytub/</guid>
      <description>Introduction:
As a full-stack developer, one of the most rewarding experiences is to build a feature-rich, scalable, and user-friendly application quickly. The AWS Amplify framework is a game-changer, providing developers with powerful tools and services that simplify the entire application development lifecycle. In this blog, I will share my experience creating my project using AWS Amplify during a hackathon.
The Power of AWS Amplify:
AWS Amplify is a comprehensive set of tools and services provided by Amazon Web Services (AWS) that enables developers to build full-stack applications with ease.</description>
    </item>
    
  </channel>
</rss>
