<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on Nishikanta Ray</title>
    <link>https://nishikanta.in/tags/react/</link>
    <description>Recent content in React on Nishikanta Ray</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 12 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://nishikanta.in/tags/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>✨ Get Creative with Badge Craft: A User-Friendly Guide to Designing Memorable Event Badges ✨</title>
      <link>https://nishikanta.in/posts/get-creative-with-badge-craft-a-user-friendly-guide-to-designing-memorable-event-badges/</link>
      <pubDate>Tue, 12 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/get-creative-with-badge-craft-a-user-friendly-guide-to-designing-memorable-event-badges/</guid>
      <description>Introducing Badge Craft: Your gateway to personalized event badges! 🎉 Say goodbye to generic designs and hello to bespoke creations tailored to your event&amp;rsquo;s theme. With Badge Craft, organizers can upload unique designs, fostering engagement and leaving a lasting impression on attendees. Our platform offers endless customization possibilities, catering to various event types.
Crafting Memorable Events: Your Step-by-Step Guide to Mastering Badge Craft:Link to headingStep-1:Link to headingGet Started with Badge Craft - Create Your Account and Log In Today!</description>
    </item>
    
    <item>
      <title>Creating a Comprehensive Hackathon Database with Outerbase and Supabase 🚀🛠️</title>
      <link>https://nishikanta.in/posts/creating-a-comprehensive-hackathon-database-with-outerbase-and-supabase/</link>
      <pubDate>Tue, 26 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/creating-a-comprehensive-hackathon-database-with-outerbase-and-supabase/</guid>
      <description>Introduction 📝Link to headingIn this tutorial, we will walk you through the process of creating a robust hackathon database using Outerbase and Supabase. This database will allow you to efficiently manage hackathon details, challenges, teams, submissions, judges, and judging criteria. 🏆🔍
Prerequisites 🧰✅Link to headingBefore we begin, make sure you have the following:
An account on Supabase: Sign up here. 🌐🔗
A project set up on Supabase with credentials generated.</description>
    </item>
    
    <item>
      <title>Compound Patterns and Custom Hooks in React: A Powerful Combination ✨</title>
      <link>https://nishikanta.in/posts/compound-patterns-and-custom-hooks-in-react-a-powerful-combination/</link>
      <pubDate>Sat, 23 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/compound-patterns-and-custom-hooks-in-react-a-powerful-combination/</guid>
      <description>IntroductionLink to headingReact&amp;rsquo;s functional components, coupled with hooks, have revolutionized the way we manage state and logic in modern web applications. One powerful approaIntroduction 🚀
React&amp;rsquo;s functional components, coupled with hooks, have revolutionized the way we manage state and logic in modern web applications. One powerful approach is the combination of compound patterns and custom hooks, which allows for cleaner, more modular code. In this blog post, we&amp;rsquo;ll explore this approach and provide practical examples to illustrate its effectiveness.</description>
    </item>
    
    <item>
      <title>Modular UIs with Compound Components in React 🧩</title>
      <link>https://nishikanta.in/posts/modular-uis-with-compound-components-in-react/</link>
      <pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/modular-uis-with-compound-components-in-react/</guid>
      <description>Introduction 🚀Link to headingWhen it comes to building user interfaces in React, creating reusable and maintainable components is crucial. One powerful design pattern that can greatly enhance the modularity of your UI is the Compound Component pattern. In this blog post, we&amp;rsquo;ll explore what the Compound Component pattern is and how to effectively implement it in React.
What is the Compound Component Pattern? 🤔Link to headingThe Compound Component pattern is a design approach that involves breaking down a complex UI element into smaller, reusable components.</description>
    </item>
    
    <item>
      <title>Render Props Pattern in React</title>
      <link>https://nishikanta.in/posts/render-props-pattern-in-react/</link>
      <pubDate>Wed, 13 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/render-props-pattern-in-react/</guid>
      <description>Introduction:
When it comes to building flexible and reusable components in React, the Render Props pattern stands out as a powerful tool in a developer&amp;rsquo;s toolkit. In this post, we&amp;rsquo;ll dive into what the Render Props pattern is, why it&amp;rsquo;s useful, and how you can leverage it in your React applications.
What is the Render Props Pattern?
At its core, the Render Props pattern is a technique used in React to share code between components.</description>
    </item>
    
    <item>
      <title>Higher-Order Components (HOCs) in React</title>
      <link>https://nishikanta.in/posts/higher-order-components-hocs-in-react/</link>
      <pubDate>Tue, 05 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/higher-order-components-hocs-in-react/</guid>
      <description>Understanding Higher-Order Components:Link to headingA Higher-Order Component (HOC) is a function that takes a component and returns a new component with enhanced capabilities. In essence, HOCs are a way to share behavior or functionality among React components. They are a crucial part of React&amp;rsquo;s composability and code reusability.
Why Use HOCs?Link to heading1. ReusabilityLink to headingHOCs allow you to encapsulate and share standard functionality across different components.</description>
    </item>
    
  </channel>
</rss>
