<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Timezones on Nishikanta Ray</title>
    <link>https://nishikanta.in/tags/timezones/</link>
    <description>Recent content in Timezones on Nishikanta Ray</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 07 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://nishikanta.in/tags/timezones/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Handling Timezones in MongoDB: A Comprehensive Guide</title>
      <link>https://nishikanta.in/posts/handling-timezones-in-mongodb-a-comprehensive-guide/</link>
      <pubDate>Sun, 07 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://nishikanta.in/posts/handling-timezones-in-mongodb-a-comprehensive-guide/</guid>
      <description>Managing time zones in a globalized environment is a critical aspect of application development. In this guide, we&amp;rsquo;ll explore various timezone-related scenarios, especially when your MongoDB database is hosted in the UK, and you&amp;rsquo;re working in a different timezone, such as IST (India Standard Time). We&amp;rsquo;ll use Moment.js, a powerful JavaScript library for handling dates, times, and time zones.
1. Timezone BasicsLink to headingTimezones represent the local time of a specific region or location.</description>
    </item>
    
  </channel>
</rss>
